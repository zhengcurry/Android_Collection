apply plugin: 'com.android.library'

//android配置
def config = rootProject.ext.android

//相关库依赖
def library = rootProject.ext.supportDependencies

android {
    compileSdkVersion config.compileSdkVersion

    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation "junit:junit:$config.junitVersion"
    implementation library.supportAppcompatV7
    androidTestImplementation "com.android.support.test:runner:$config.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$config.espressoVersion"
}


def _BASENAME = "TestJar"
def _VERSION = "_V1.0"
//生成jar包的位置
def _DestinationPath = "build"
//待打包文件位置--不同的studio版本，路径不一样
def zipFile = file('build/intermediates/intermediate-jars/debug/classes.jar')

//删除已存在的版本
task deleteBuild(type: Delete) {
    delete _DestinationPath + _BASENAME + _VERSION + ".jar"
}

task makeJar(type: Jar) {
    from zipTree(zipFile)
    from fileTree(dir: 'src/main', includes: ['assets/**']) //将assets目录打入jar包
    baseName = _BASENAME + _VERSION
    destinationDir = file(_DestinationPath)
}

makeJar.dependsOn(deleteBuild, build)
